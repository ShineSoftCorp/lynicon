@model Lynicon.Test.Models.TestContent
@using Lynicon.Extensibility

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Constraint Ordering</title>
</head>
<body>
    <div>
        @{
            var coc = new ConstraintOrderedCollection<KeyValuePair<string, string>>(kvp => kvp.Key);
            coc.Add(new KeyValuePair<string, string>("a", "A"));
            coc.Add(new KeyValuePair<string, string>("c", "C"), "b");
            coc.Add(new KeyValuePair<string, string>("b", "B"), "a", "1");
            }
        @foreach (var kvp in coc) {
            <div>@kvp.Value</div>
        }
        <hr />
        @{
            coc.Clear();
            coc.Add(new KeyValuePair<string, string>("a", "A"));
            coc.Add(new KeyValuePair<string, string>("b", "B"));
            coc.Add(new KeyValuePair<string, string>("q", "Q"));
        }
        @foreach (var kvp in coc) {
            <div>@kvp.Value</div>
        }
        <hr />
        @{
            coc.Clear();
            coc.Add(new KeyValuePair<string, string>("c", "C"));
            coc.Add(new KeyValuePair<string, string>("a", "A"), ConstraintType.After, "b");
            coc.Add(new KeyValuePair<string, string>("b", "B"), ConstraintType.After, "c");
            coc.Add(new KeyValuePair<string, string>("q", "Q"), "a", "c");
            coc.Add(new KeyValuePair<string, string>("p", "P"), new List<string> { "c" }, new List<string> { "q" });
        }
        @foreach (var kvp in coc) {
            <div>@kvp.Value</div>
        }
        <hr />
    </div>
</body>
</html>
