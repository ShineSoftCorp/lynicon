@model Lynicon.Models.AdminViewModel
@{
    Layout = "~/Areas/Lynicon/Views/Shared/EditorLayout.cshtml";
}
@section Head {
    <style>
        .module, .change-problem { background-color: #3a7777; color: white; padding: 3px; border-bottom: 1px solid white; overflow: auto; }
        .title { float: left; }
        .module-section { float: left; margin-left: 10px; font-style: italic; }
        .module-button, .button { font-weight: bold; font-style: normal; cursor: pointer; border: 1px solid white; padding: 0px 3px; float:left; margin-left: 10px; }
        .module-button:hover, .button:hover { color: #bababa; }
        .button { display: inline-block; }
    </style>
}
    <h2>Modules</h2>
    <div id="module-list">
        @foreach (var mavm in Model.BlockedModules)
        {
            <div class="module blocked-module">
                <span class="title">@mavm.Title BLOCKED</span>
                <span class="error">@Html.Raw(mavm.Error)</span>
            </div>
        }
        @foreach (var mavm in Model.RunningModules)
        {
            <div class="module running-module">
                <span class="title">@mavm.Title</span>
                @if (mavm.ViewName != null)
                {
                    @Html.Partial(mavm.ViewName, mavm)
                }
            </div>
        }
    </div>
    <script type="text/javascript">
        $('#module-list').on('click', '.module-button', function () {
            var $this = $(this);
            var oldText = $this.text();
            $this.text('working...').css('font-style', 'italic');
            $.post($this.data('url'), function (resp) {
                alert(resp);
            }).always(function () {
                $this.text(oldText).css('font-style', '');
            });
        });
    </script>
    <h2>Change Problems</h2>
    <div id="change-problems">
        @foreach (var cp in Model.ChangeProblems)
        {
            <div class="change-problem">
                @cp.ProblemType
                @cp.TypeName
                @cp.PropertyName
                @if (cp.IsDataProblem)
                {
                    <div data-cp-id="@cp.Id" class="resolved-button button">Mark as Resolved</div>
                }
            </div>
        }
    </div>
    <script type="text/javascript">
        $('#change-problems').on('click', '.resolved-button', function () {
            var $this = $(this);
            $.post('/lynicon/admin/resolveproblem', { Id: $this.data('cp-id') }, function () {
                alert('Marked as resolved, data can now be edited');
                $this.closest('.change-problem').remove();
            });
        });
    </script>
    <h2>Field Transferer</h2>
    <div>
        <form action="/lynicon/admin/rename" method="post" target="_blank">
            <fieldset name="Field From">
                <h3>Field From</h3>
                <label for="dataType">DataType</label>
                <input id="dataType" type="text" name="dataType" />
                <label for="path">Path</label>
                <input id="path" type="text" name="path" />
                <label for="pathInSummary">In Summary</label>
                <input id="pathInSummary" type="checkbox" name="pathInSummary" value="true" />
                <input name="pathInSummary" type="hidden" value="false" />
            </fieldset>
            <fieldset name="Field To">
                <h3>Field To</h3>
                <label for="newPath">New Path</label>
                <input id="newPath" type="text" name="newPath" />
                <label for="newPathInSummary">In Summary</label>
                <input id="newPathInSummary" type="checkbox" name="newPathInSummary" value="true" />
                <input name="newPathInSummary" type="hidden" value="false" />
            </fieldset>
            <label for="isDelete">Delete Data</label>
            <input id="isDelete" type="checkbox" name="isDelete" value="true" />
            <input name="isDelete" type="hidden" value="false" />
            <button type="submit">Rename/Delete Path</button>
        </form>
    </div>

@{ object dummy = null; }
@Html.DisplayFor(m => dummy, "FuncPanel")
