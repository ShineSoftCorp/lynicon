@model object
@using Lynicon.Extensibility
@using Lynicon.Collation
@using Lynicon.Utility
@{
    LyniconUi ui = LyniconUi.Instance;
    string sections = (string)ViewData["Sections"] ?? "";
}
@if (ui.ShowProblemAlert)
{
    Html.RegisterLocalStyles("problem-alert", "#fpbAdmin { background-color: red }");
}
<div id='funcPanel'>
    <div id="reveal" style="display:none">
        @{ bool isAlt = false; }
        @foreach (var viewKvp in ui.RevealPanelViews)
        {
        <div class="reveal-panel-view @(isAlt ? " alt" : "")">
            @Html.Partial(viewKvp.Value)
            <div style="clear:both"></div>
        </div>
            isAlt = !isAlt;
        }

        <div style="clear:both"></div>
    </div>
    <img id="lyn-logo" src="/areas/lynicon/content/lynicon-cmsbar.png" />
    <div id="reveal-button"><img id="reveal-arrow" src="/areas/lynicon/content/up-arrow-white.png" /></div>
    @if (sections.Contains("Opener")) {
    <div id="opener">
        <i id="opener-out" class="fa fa-caret-left"></i>
        <i id="opener-in" class="fa fa-caret-right"></i>
    </div>
    }
    @{
        var vers = Model == null ? null : VersionManager.Instance.GetVersion(Collator.Instance.GetContainer(Model));
    }
    @if (vers != null && vers.Count > 0)
    {
        <div id="version-unit">
            @Html.Raw(VersionManager.Instance.DisplayVersion(vers))
        </div>
    }
    @foreach (var btn in ui.FuncPanelButtons)
    {
        if (!btn.DisplayPermission.Permitted(Model) || (btn.Section != "Global" && !sections.Contains(btn.Section)))
        {
            continue;
        }
        if (btn.Section == "Global")
        {
            <div class="sep">|</div>
        }

        if (btn.ViewName == null)
        {
            string url = ui.ApplySubstitutions(btn.Url, ViewContext, ViewBag);
            <a href="@(string.IsNullOrEmpty(url) ? "javascript:void(0)" : url)" id="@btn.Id" class="func-button @btn.Section" style="@(string.IsNullOrEmpty(btn.BackgroundColor) ? "" : "background-color: " + btn.BackgroundColor + ";")">
            @btn.Caption
            </a>
        }
        else
        {
            @Html.Partial(btn.ViewName)
        }
    }
</div>
<script type="text/javascript">
    $(document).ready(function () {
        @foreach (var btn in ui.FuncPanelButtons.Where(fpb => !string.IsNullOrEmpty(fpb.ClientClickScript) && fpb.DisplayPermission.Permitted(Model))) {
        @:$('#@btn.Id').click(function (ev) {
            @:ev.preventDefault();
            @Html.Raw(ui.ApplySubstitutions(btn.ClientClickScript, ViewContext, ViewBag))
        @:});
        }
        $('#reveal-button').click(function () {
            if ($('#reveal').length == 0) {
                $("<div id='reveal'></div>")
                    .hide()
                    .insertBefore($('#save'))
                    .load('/lynicon/ui/functionreveal', function () {
                        $('#reveal').show('slow');
                    });
                $('#reveal-arrow').attr('src', '/areas/lynicon/content/down-arrow-white.png');
            } else if ($('#reveal').is(':visible')) {
                $('#reveal').hide('slow');
                $('#reveal-arrow').attr('src', '/areas/lynicon/content/up-arrow-white.png');
            } else {
                $('#reveal').show('slow');
                $('#reveal-arrow').attr('src', '/areas/lynicon/content/down-arrow-white.png');
            }

        });
    });
</script>
